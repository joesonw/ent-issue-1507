// Code generated by entc, DO NOT EDIT.

package user

import (
	player_pb "example/pkg/player/v1"
	"fmt"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldInfo holds the string denoting the info field in the database.
	FieldInfo = "info"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldStatus,
	FieldInfo,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// StatusValidator is a validator for the "Status" field enum values. It is called by the builders before save.
func StatusValidator(_status player_pb.Status) error {
	switch _status {
	case "OK", "NOT_OK":
		return nil
	default:
		return fmt.Errorf("user: invalid enum value for Status field: %q", _status)
	}
}
